# Print the length of ministry and turn it into upper case
ministry = "The Ministry of Silly Walks"
print len(ministry)
print ministry.upper()
> 27
> THE MINISTRY OF SILLY WALKS

# Print the concatenation of "Spam and eggs"
print "Spam " + "and " + "eggs"
> Spam and eggs

# Turn 3.14 into a string
print "The value of pi is around " + str(3.14)
> The value of pi is around 3.14

# String formatting with %
name = raw_input("What is your name?")
quest = raw_input("What is your quest?")
color = raw_input("What is your favorite color?")

print "Ah, so your name is %s, your quest is %s, " \
"and your favorite color is %s." % (name, quest, color)
> Ah, so your name is Johan, your quest is To seek the holy grail, and your favorite color is Blue.

# Date & time
from datetime import datetime
now = datetime.now()
print '%s/%s/%s %s:%s:%s' % (now.month, now.day, now.year, now.hour, now.minute, now.second)
> 1/15/2015 10:9:19

# Import *everything* from the math module
from math import *

# Show everything available in the math module
import math            # Imports the math module
everything = dir(math) # Sets everything to a list of things from math
print everything       # Prints 'em all!

# Print the max value of the below numbers
maximum = max (3, 4, 5, -1, 7, 22, -23)
print maximum
> 22

# Define a function and returns different things based on argument type
def distance_from_zero(d):
    if type(d) == int or type(d) == float:
        return abs(d)
    else:
        return "Nope"

        
def hotel_cost(nights):
    return (140 * nights)

def plane_ride_cost(city):
    if city == "Charlotte":
        return 183
    elif city == "Tampa":
        return 220
    elif city == "Pittsburgh":
        return 222
    elif city == "Los Angeles":
        return 475

def rental_car_cost(days):
    cost = (days * 40)
    if days >= 7:
        cost = (cost - 50)
    elif days >= 3 and days <=6:
        cost = (cost - 20)
        return cost
        

# Loop through the start_list and square the numbers, append them to square_list and then sort and print the latter.
start_list = [5, 3, 1, 2, 4]
square_list = []

for number in start_list:
    square_list.append(number ** 2)

square_list.sort()
print square_list


# Print everything stored in the list called 'names'
names = ["Adam","Alex","Mariah","Martine","Columbus"]
for x in names:
    print x

    
# Print everything stored in the dictionary called 'webster':
webster = {
	"Aardvark" : "A star of a popular children's cartoon show.",
    "Baa" : "The sound a goat makes.",
    "Carpet": "Goes on the floor.",
    "Dab": "A small amount."
}

# Add your code below!
for x in webster:
    print webster[x]

    
# Student becomes the teacher
    # A bunch of pupils
lloyd = {
    "name": "Lloyd",
    "homework": [90.0, 97.0, 75.0, 92.0],
    "quizzes": [88.0, 40.0, 94.0],
    "tests": [75.0, 90.0]
}
alice = {
    "name": "Alice",
    "homework": [100.0, 92.0, 98.0, 100.0],
    "quizzes": [82.0, 83.0, 91.0],
    "tests": [89.0, 97.0]
}
tyler = {
    "name": "Tyler",
    "homework": [0.0, 87.0, 75.0, 22.0],
    "quizzes": [0.0, 75.0, 78.0],
    "tests": [100.0, 100.0]
}

# Add your function below!
def average(numbers):
    total = sum(numbers)
    total = float(total)
    result = (total / len(numbers))
    return result

# Calculate student average
def get_average(student):
    homework = average(student["homework"])
    quizzes = average(student["quizzes"])
    tests = average(student["tests"])
    
    return (0.1 * homework) + (0.3 * quizzes) + (0.6 * tests)

#print get_average(tyler)

# Calculate letter grade
def get_letter_grade(score):
    if score >= 90:
        return "A"
    elif score >= 80:
        return "B"
    elif score >= 70:
        return "C"
    elif score >= 60:
        return "D"
    else:
        return "F"
        
#print get_letter_grade(get_average(lloyd))

# Calculate class average
def get_class_average(students):
    results = []
    for student in students:
        results.append(get_average(student))
    return average(results)

# Print the results    
students = [lloyd, alice, tyler]
print get_class_average(students)
print get_letter_grade(get_class_average(students)) 



# Remove stuff from a list
list = [1, 3, 5, 6, 8]
list.pop(1)     # Returns and returns the item at index 1 (3) 
list.remove(6)  # Removes the actual number 6
del.(list[1])   # Deletes the item at index 1 (3)
